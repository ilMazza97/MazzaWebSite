<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.cdyne.com/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://ws.cdyne.com/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">These functions deal with Email Address Verification.  &lt;b&gt;CDYNE advertises a 100% SLA.  Try to find that kind of SLA from other web service vendors!&lt;/b&gt;</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.cdyne.com/">
      <s:element name="VerifyMXRecord">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="email" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyMXRecordResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="VerifyMXRecordResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyEmail">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="email" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyEmailResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="VerifyEmailResult" type="tns:ReturnValues" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ReturnValues">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ValidLicenseKey" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="CorrectSyntax" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="EmailDomainFound" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="EmailDisposable" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="DomainVerifiesEmail" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="DomainAcceptsMail" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="EmailVerified" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="Timeout" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="DomainServersDown" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="GoodEmail" type="s:boolean" />
        </s:sequence>
      </s:complexType>
      <s:element name="VerifyEmailWithTimeout">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="email" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="timeout" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyEmailWithTimeoutResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="VerifyEmailWithTimeoutResult" type="tns:ReturnValues" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="int" type="s:int" />
      <s:element name="ReturnValues" type="tns:ReturnValues" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="VerifyMXRecordSoapIn">
    <wsdl:part name="parameters" element="tns:VerifyMXRecord" />
  </wsdl:message>
  <wsdl:message name="VerifyMXRecordSoapOut">
    <wsdl:part name="parameters" element="tns:VerifyMXRecordResponse" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailSoapIn">
    <wsdl:part name="parameters" element="tns:VerifyEmail" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailSoapOut">
    <wsdl:part name="parameters" element="tns:VerifyEmailResponse" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutSoapIn">
    <wsdl:part name="parameters" element="tns:VerifyEmailWithTimeout" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutSoapOut">
    <wsdl:part name="parameters" element="tns:VerifyEmailWithTimeoutResponse" />
  </wsdl:message>
  <wsdl:message name="VerifyMXRecordHttpGetIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyMXRecordHttpGetOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailHttpGetIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnValues" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutHttpGetIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="timeout" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnValues" />
  </wsdl:message>
  <wsdl:message name="VerifyMXRecordHttpPostIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyMXRecordHttpPostOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailHttpPostIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnValues" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutHttpPostIn">
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="timeout" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyEmailWithTimeoutHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnValues" />
  </wsdl:message>
  <wsdl:portType name="EmailVerifySoap">
    <wsdl:operation name="VerifyMXRecord">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify the domains DNS (MX) mail entries.  If the function returns 0 the persons email domain is invalid.  More than 0 will indicate there is mail servers to accept an email.  This function is great for quick email domain verification.  It is not as powerful as the other email routines.  Use a LicenseKey of 0 for testing.  A -9999 as a result means that you have tested to many emails.  Please try again later if you get this value.</wsdl:documentation>
      <wsdl:input message="tns:VerifyMXRecordSoapIn" />
      <wsdl:output message="tns:VerifyMXRecordSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function calls VerifyEmailWithTimeout with a default timeout of 10.</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailSoapIn" />
      <wsdl:output message="tns:VerifyEmailSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify an email address and also includes the ability to set the timeout of the verification process.&lt;br&gt;&lt;br&gt;&lt;b&gt;Return Structure Field Descriptions: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;ValidLicenseKey: if true, the license key is valid and within the usage allowance limit.  &lt;/li&gt;&lt;li&gt;CorrectSyntax: if true, the email is in the correct format and contains no invalid characters. (Invalid characters:  []\()&lt;&gt;:;@,)&lt;/li&gt;&lt;li&gt;EmailDomainFound: if true, the domain for the email was found.&lt;/li&gt;&lt;li&gt;DisposableEmailDomain: if true, the email domain is in our database of disposable/spam domains.&lt;/li&gt;&lt;li&gt;DomainVerifiesEmail: if true, the domain verifies email addresses; if false, the domain accepts any address.&lt;/li&gt;&lt;li&gt;DomainAcceptsMail: if true, the domain will accept mail.&lt;/li&gt;&lt;li&gt;EmailVerified: if true, the email address was verified by the mail server.&lt;/li&gt;&lt;li&gt;Timeout: if true, the process timed out.&lt;/li&gt;&lt;li&gt;DomainServersDown: if true, and the email domain was found, the servers are down.&lt;/li&gt;&lt;li&gt;GoodEmail: true if DomainAcceptsMail, EmailVerified, Timeout, or DomainServersDown is true.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Notes: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;Timeout is in &lt;b&gt;seconds&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;Use a licensekey of 0 for testing.&lt;/li&gt;&lt;/ul&gt;</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailWithTimeoutSoapIn" />
      <wsdl:output message="tns:VerifyEmailWithTimeoutSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="EmailVerifyHttpGet">
    <wsdl:operation name="VerifyMXRecord">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify the domains DNS (MX) mail entries.  If the function returns 0 the persons email domain is invalid.  More than 0 will indicate there is mail servers to accept an email.  This function is great for quick email domain verification.  It is not as powerful as the other email routines.  Use a LicenseKey of 0 for testing.  A -9999 as a result means that you have tested to many emails.  Please try again later if you get this value.</wsdl:documentation>
      <wsdl:input message="tns:VerifyMXRecordHttpGetIn" />
      <wsdl:output message="tns:VerifyMXRecordHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function calls VerifyEmailWithTimeout with a default timeout of 10.</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailHttpGetIn" />
      <wsdl:output message="tns:VerifyEmailHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify an email address and also includes the ability to set the timeout of the verification process.&lt;br&gt;&lt;br&gt;&lt;b&gt;Return Structure Field Descriptions: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;ValidLicenseKey: if true, the license key is valid and within the usage allowance limit.  &lt;/li&gt;&lt;li&gt;CorrectSyntax: if true, the email is in the correct format and contains no invalid characters. (Invalid characters:  []\()&lt;&gt;:;@,)&lt;/li&gt;&lt;li&gt;EmailDomainFound: if true, the domain for the email was found.&lt;/li&gt;&lt;li&gt;DisposableEmailDomain: if true, the email domain is in our database of disposable/spam domains.&lt;/li&gt;&lt;li&gt;DomainVerifiesEmail: if true, the domain verifies email addresses; if false, the domain accepts any address.&lt;/li&gt;&lt;li&gt;DomainAcceptsMail: if true, the domain will accept mail.&lt;/li&gt;&lt;li&gt;EmailVerified: if true, the email address was verified by the mail server.&lt;/li&gt;&lt;li&gt;Timeout: if true, the process timed out.&lt;/li&gt;&lt;li&gt;DomainServersDown: if true, and the email domain was found, the servers are down.&lt;/li&gt;&lt;li&gt;GoodEmail: true if DomainAcceptsMail, EmailVerified, Timeout, or DomainServersDown is true.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Notes: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;Timeout is in &lt;b&gt;seconds&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;Use a licensekey of 0 for testing.&lt;/li&gt;&lt;/ul&gt;</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailWithTimeoutHttpGetIn" />
      <wsdl:output message="tns:VerifyEmailWithTimeoutHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="EmailVerifyHttpPost">
    <wsdl:operation name="VerifyMXRecord">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify the domains DNS (MX) mail entries.  If the function returns 0 the persons email domain is invalid.  More than 0 will indicate there is mail servers to accept an email.  This function is great for quick email domain verification.  It is not as powerful as the other email routines.  Use a LicenseKey of 0 for testing.  A -9999 as a result means that you have tested to many emails.  Please try again later if you get this value.</wsdl:documentation>
      <wsdl:input message="tns:VerifyMXRecordHttpPostIn" />
      <wsdl:output message="tns:VerifyMXRecordHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function calls VerifyEmailWithTimeout with a default timeout of 10.</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailHttpPostIn" />
      <wsdl:output message="tns:VerifyEmailHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function will verify an email address and also includes the ability to set the timeout of the verification process.&lt;br&gt;&lt;br&gt;&lt;b&gt;Return Structure Field Descriptions: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;ValidLicenseKey: if true, the license key is valid and within the usage allowance limit.  &lt;/li&gt;&lt;li&gt;CorrectSyntax: if true, the email is in the correct format and contains no invalid characters. (Invalid characters:  []\()&lt;&gt;:;@,)&lt;/li&gt;&lt;li&gt;EmailDomainFound: if true, the domain for the email was found.&lt;/li&gt;&lt;li&gt;DisposableEmailDomain: if true, the email domain is in our database of disposable/spam domains.&lt;/li&gt;&lt;li&gt;DomainVerifiesEmail: if true, the domain verifies email addresses; if false, the domain accepts any address.&lt;/li&gt;&lt;li&gt;DomainAcceptsMail: if true, the domain will accept mail.&lt;/li&gt;&lt;li&gt;EmailVerified: if true, the email address was verified by the mail server.&lt;/li&gt;&lt;li&gt;Timeout: if true, the process timed out.&lt;/li&gt;&lt;li&gt;DomainServersDown: if true, and the email domain was found, the servers are down.&lt;/li&gt;&lt;li&gt;GoodEmail: true if DomainAcceptsMail, EmailVerified, Timeout, or DomainServersDown is true.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Notes: &lt;/b&gt;&lt;ul&gt;&lt;li&gt;Timeout is in &lt;b&gt;seconds&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;Use a licensekey of 0 for testing.&lt;/li&gt;&lt;/ul&gt;</wsdl:documentation>
      <wsdl:input message="tns:VerifyEmailWithTimeoutHttpPostIn" />
      <wsdl:output message="tns:VerifyEmailWithTimeoutHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EmailVerifySoap" type="tns:EmailVerifySoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="VerifyMXRecord">
      <soap:operation soapAction="http://ws.cdyne.com/VerifyMXRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <soap:operation soapAction="http://ws.cdyne.com/VerifyEmail" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <soap:operation soapAction="http://ws.cdyne.com/VerifyEmailWithTimeout" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmailVerifySoap12" type="tns:EmailVerifySoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="VerifyMXRecord">
      <soap12:operation soapAction="http://ws.cdyne.com/VerifyMXRecord" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <soap12:operation soapAction="http://ws.cdyne.com/VerifyEmail" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <soap12:operation soapAction="http://ws.cdyne.com/VerifyEmailWithTimeout" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmailVerifyHttpGet" type="tns:EmailVerifyHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="VerifyMXRecord">
      <http:operation location="/VerifyMXRecord" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <http:operation location="/VerifyEmail" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <http:operation location="/VerifyEmailWithTimeout" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmailVerifyHttpPost" type="tns:EmailVerifyHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="VerifyMXRecord">
      <http:operation location="/VerifyMXRecord" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmail">
      <http:operation location="/VerifyEmail" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyEmailWithTimeout">
      <http:operation location="/VerifyEmailWithTimeout" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EmailVerify">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">These functions deal with Email Address Verification.  &lt;b&gt;CDYNE advertises a 100% SLA.  Try to find that kind of SLA from other web service vendors!&lt;/b&gt;</wsdl:documentation>
    <wsdl:port name="EmailVerifySoap" binding="tns:EmailVerifySoap">
      <soap:address location="http://ws.cdyne.com/emailverifyws/emailverify.asmx" />
    </wsdl:port>
    <wsdl:port name="EmailVerifySoap12" binding="tns:EmailVerifySoap12">
      <soap12:address location="http://ws.cdyne.com/emailverifyws/emailverify.asmx" />
    </wsdl:port>
    <wsdl:port name="EmailVerifyHttpGet" binding="tns:EmailVerifyHttpGet">
      <http:address location="http://ws.cdyne.com/emailverifyws/emailverify.asmx" />
    </wsdl:port>
    <wsdl:port name="EmailVerifyHttpPost" binding="tns:EmailVerifyHttpPost">
      <http:address location="http://ws.cdyne.com/emailverifyws/emailverify.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>