@using MazzaWebSite.Resources;
@model MazzaWebSite.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (!Request.IsAuthenticated)
{
    Response.Redirect("~/Account/Login");
}
else
{
    using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-lg-2 col-md-5 mb-3"> <h4>Change Password</h4></div> 
        <hr />

        <div class="col-lg-2 col-md-5 mb-3">   
            @Html.LabelFor(m => m.OldPassword, Account.OldPassword, new { @class = "control-label" })
            <div class="col-md-10">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text fa fa-user-circle-o" />
                    </div>
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-2 col-md-5 mb-3">
            @Html.LabelFor(m => m.NewPassword, Account.NewPassword, new { @class = "control-label" })
            <div class="col-md-10">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text fa fa-user-circle-o" />
                    </div>
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-2 col-md-5 mb-3">
            @Html.LabelFor(m => m.ConfirmPassword, Account.ConfirmPassword, new { @class = "control-label" })
            <div class="col-md-10">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text fa fa-user-circle-o" />
                    </div>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-2 col-md-5 mb-3">
            <div class="col-lg-2 col-md-5 mb-3">
                <button type="submit" class="btn btn-primary mb-3">@Account.ChagePassword</button>
            </div>
        </div>
    }
}