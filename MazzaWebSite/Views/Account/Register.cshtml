@using MazzaWebSite.Resources;
@model MazzaWebSite.Models.RegisterViewModel
@{
    /**/

    ViewBag.Title = string.Format("{0} - {1}", Account.SignUp, General.OMPTitle);
    HttpCookie cookie = Request.Cookies["OMP-referentcode"];

    var referentcode = string.IsNullOrEmpty(cookie.Value) ? @ViewBag.ReferentCode : cookie.Value;
}
@*<section class="content-header">
        @*<h2>@Account.SignUp</h2>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>@ViewContext.RouteData.Values["controller"]</a></li>
            <li class="active">@ViewContext.RouteData.Values["action"]</li>
        </ol>
        @*<hr />
    </section>*@
@if (Request.IsAuthenticated)
{
    Response.Redirect("~/");
}
else
{
<section class="signup">
    <div class="account-container">
        <div class="signup-content">
            <div class="signup-form">
                <h2 class="form-title">Sign up</h2>
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "register-form", role = "form", Id = "register-form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fas fa-gem" />
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.ReferentCode, new { @class = "input", @readonly = true, @Value = referentcode, placeholder = Account.ReferentCode })
                        @Html.ValidationMessageFor(m => m.ReferentCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fas fa-user-circle" />
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "input", placeholder = Account.FirstName })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fas fa-user-circle" />
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "input", placeholder = Account.LastName })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-at" />
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "input", placeholder = Account.UserName })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-male" />
                            </div>
                        </div>
                        @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>{
                                new SelectListItem{ Text=Account.Male, Value="M"},
                                new SelectListItem{ Text=Account.Female, Value="F"}
                                }, Account.Gender
                        , new { @class = "input" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-map"></span>
                            </div>
                        </div>
                        @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.CountryList, "Value", "Text"), Account.Country, new { @class = "input" })
                        @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-birthday-cake"></span>
                            </div>
                        </div>
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "input", placeholder = Account.DateOfBirth } })
                        @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-envelope"></span>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "input", placeholder = Account.Email })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-phone" />
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "input", placeholder = Account.PhoneNumber })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-unlock" />
                            </div>
                        </div>
                        @Html.PasswordFor(m => m.Password, new { @class = "input", placeholder = Account.Password })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        <div class="label">
                            <div class="label-prepend">
                                <span class="label-text fa fa-unlock" />
                            </div>
                        </div>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input", placeholder = Account.RepeatPassword })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                    <div>
                        <div class="agree-group">
                            @Html.CheckBoxFor(m => m.AcceptTerms, new { @class = "agree-term", @id = "agree-term" })
                            <label for="agree-term" class="label-agree-term">I agree all statements in  <a href="#" class="term-service">Terms of service</a></label>
                        </div>
                        @Html.ValidationMessageFor(m => m.AcceptTerms, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group form-button">
                        <button type="submit" class="form-submit">@Account.SignUp</button>
                    </div>

                }
            </div>
            <div class="signup-image">
                @*<figure><img src="~/img/signup-image.jpg" alt="sing up image"></figure>*@
                <figure><img src="~/img/signup.svg" alt="sing up image"></figure>
                @Html.ActionLink(Account.AlreadyMember, "Login", "Account", null, new { @class = "signup-image-link" })
            </div>
        </div>
    </div>
            

</section>
}
